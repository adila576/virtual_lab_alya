# -*- coding: utf-8 -*-
"""cekkecocokan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kkfDvdWQYISZ4ANkVTakKz8MiKpVkUEq
"""

import streamlit as st
import hashlib
import random

# Fungsi untuk menghasilkan angka konsisten dari dua nama
def generate_compatibility(name1, name2):
    combined = (name1 + name2).lower().strip()
    hash_object = hashlib.sha256(combined.encode())
    hex_digest = hash_object.hexdigest()
    number = int(hex_digest[:8], 16)
    return number % 101  # Hasil antara 0 - 100

# Komentar berdasarkan tingkat kecocokan
def get_love_comment(score):
    if score > 90:
        return "🔥 Wah, kalian ditakdirkan bersama! 🔥"
    elif score > 75:
        return "💖 Sangat cocok! Ada chemistry kuat di antara kalian. ✨"
    elif score > 50:
        return "😊 Lumayan cocok, tinggal saling pengertian aja~"
    elif score > 30:
        return "😬 Masih bisa dicoba, tapi butuh usaha lebih ya!"
    else:
        return "💔 Ehh... kayaknya kalian cocok jadi teman aja deh 😅"

# Header
st.set_page_config(page_title="Kalkulator Cinta Nama", page_icon="💘")
st.title("💘 Kalkulator Kecocokan Pasangan")
st.write("Masukkan dua nama untuk mengetahui seberapa cocok kalian ✨")

# Input nama
name1 = st.text_input("Nama Pertama:")
name2 = st.text_input("Nama Kedua:")

# Tombol cek kecocokan
if st.button("Cek Kecocokan ❤️"):
    if not name1 or not name2:
        st.warning("Silakan masukkan kedua nama terlebih dahulu.")
    else:
        score = generate_compatibility(name1, name2)
        comment = get_love_comment(score)

        st.subheader("💑 Hasil Kecocokan:")
        st.success(f"Kecocokan antara **{name1}** dan **{name2}** adalah **{score}%**")

        st.markdown(f"### {comment}")

        # Efek lucu visual (emoji dinamis)
        if score > 75:
            st.markdown("🎉💞💖💘💍💑💓")
        elif score > 50:
            st.markdown("😊🌸✨💬💞")
        elif score > 30:
            st.markdown("🤔💬💭🛠️")
        else:
            st.markdown("💔🥲🍃😶")